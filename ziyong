# ####################################################################
# #
# #      “生产环境终版” (已支持多台NAS PT设备)
# #         后续仅需根据机场节点更新或新增业务场景，
# #         在 “自定义规则区域” 补充规则即可，核心配置无需调整
# ####################################################################

# --- 机场订阅、预置节点 ---
proxy-providers:
  Airport1:
    url: "你的机场链接，替换双引号之内的文字"
    type: http
    interval: 86400
    health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}
    proxy: 直连
proxies:
  - {name: 直连, type: direct}
  - {name: REJECT, type: reject}

# --- 全局配置 ---
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
lan-allowed-ips: ["192.168.0.0/16", "10.0.0.0/8", "172.16.0.0/12"]
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
tcp-fast-open: true
reuse-address: true
keep-alive: true
log-level: warning
profile: {store-selected: true, store-fake-ip: true}

# --- 外部控制器配置 ---
external-controller: 0.0.0.0:9090
secret: ""

# --- 嗅探、入站 ---
sniffer:
  enable: true
  sniff: {HTTP: {ports: [80, 8080-8880], override-destination: true}, TLS: {ports: [443, 8443]}, QUIC: {ports: [443, 8443]}}
  force-domain: ["+.v2ex.com"]
  skip-domain: ["+.baidu.com"]
tun:
  enable: true
  stack: gvisor
  dns-hijack: ["any:53", "tcp://any:53", "udp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# --- DNS模块 ---
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  disable-cache: false
  cache-size: 4096
  cache-ttl: 3600
  edns: false
  fake-ip-filter:
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.local"
    - "rule-set:private_domain,cn_domain,pt_rules,docker"
    - "+.tracker"
    - "+.torrent"
    - "+.docker.com"
    - "+.docker.io"
  default-nameserver: [223.5.5.5, 119.29.29.29]
  proxy-server-nameserver: [https://223.5.5.5/dns-query, 223.6.6.6]
  nameserver: [223.5.5.5, 119.29.29.29]

# ----------------------------------------------------------------
# 策略组 (proxy-groups )
# ----------------------------------------------------------------
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [♻️ 自动选择, 🔯 故障转移, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 直连]}
  - {name: 🎥 NETFLIX, type: select, proxies: [♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 直连]}
  - {name: 🤖 ChatGPT, type: select, proxies: [♻️ 自动选择, 🇺🇲 美国节点, 🇯🇵 日本节点, 🇸🇬 狮城节点, 直连]}
  - {name: 🎵 TikTok, type: select, proxies: [♻️ 自动选择, 🇯🇵 日本节点, 🇸🇬 狮城节点, 🇺🇲 美国节点]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 默认代理, 直连]}
  - name: 💻 PT设备专用
    type: url-test
    url: https://www.gstatic.com/generate_204
    fallback-url: http://www.apple.com/library/test/success.html
    interval: 1800
    timeout: 5000
    use: [Airport1]
    filter: '^(?!.*(直连|REJECT )).*$'

  # --- 节点筛选组 ---
  - {name: 🇭🇰 香港节点, type: select, use: [Airport1], filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本节点, type: select, use: [Airport1], filter: "(?i)日|jp|japan"}
  - {name: 🇸🇬 狮城节点, type: select, use: [Airport1], filter: "(?i)新加坡|坡|狮城|SG|Singapore"}
  - {name: 🇺🇲 美国节点, type: select, use: [Airport1], filter: "(?i)美|us|unitedstates|united states"}
  - name: 🔯 故障转移
    type: fallback
    use: [Airport1]
    url: https://www.gstatic.com/generate_204
    fallback-url: http://www.apple.com/library/test/success.html
    interval: 300
    timeout: 5000
    filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"
  - name: ♻️ 自动选择
    type: url-test
    use: [Airport1]
    url: https://www.gstatic.com/generate_204
    fallback-url: http://www.apple.com/library/test/success.html
    interval: 900
    timeout: 5000
    filter: "^((?!直连).)*$"
  - {name: 🌐 全部节点, type: select, use: [Airport1]}

# ----------------------------------------------------------------
# 子规则集 (Sub-Rules)
# ----------------------------------------------------------------
sub-rules:
  pt-device-rules:
    - RULE-SET,docker,🚀 默认代理
    - MATCH,💻 PT设备专用

  pt-only-rules:
    - RULE-SET,pt_rules,直连
    - MATCH,💻 PT设备专用

# ----------------------------------------------------------------
# 规则 (Rules)
# ----------------------------------------------------------------
rules:
  # --- PT客户端进程规则 ---
  - PROCESS-NAME,qBittorrent,SUB-RULE,pt-only-rules
  - PROCESS-NAME,transmission-daemon,SUB-RULE,pt-only-rules
  - PROCESS-NAME,uTorrent,SUB-RULE,pt-only-rules

  # --- NAS IP 分流规则 (已覆盖 10.10.10.5-10.10.10.9) ---
  - SRC-IP-CIDR,10.10.10.5/32,SUB-RULE,pt-device-rules
  - SRC-IP-CIDR,10.10.10.6/32,SUB-RULE,pt-device-rules
  - SRC-IP-CIDR,10.10.10.7/32,SUB-RULE,pt-device-rules
  - SRC-IP-CIDR,10.10.10.8/32,SUB-RULE,pt-device-rules
  - SRC-IP-CIDR,10.10.10.9/32,SUB-RULE,pt-device-rules

  # --- 基础与安全规则 ---
  - RULE-SET,private_ip,直连,no-resolve
  - RULE-SET,private_domain,直连
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,gfw,🚀 默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,cn_ip,直连,no-resolve
  - MATCH,🐟 漏网之鱼

  # --- 自定义规则区域 ---
  # - DOMAIN,example.com,🚀 默认代理

# ----------------------------------------------------------------
# 规则提供者 (Rule Providers)
# ----------------------------------------------------------------
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  pt_rules: &pt_rules {type: inline, behavior: classical, payload: ['DOMAIN-KEYWORD,tracker', 'DOMAIN-KEYWORD,torrent', 'DOMAIN-KEYWORD,announce', 'DOMAIN-KEYWORD,scrape']}

rule-providers:
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  ai: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs" }
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  gfw: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  docker: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/docker.mrs"}
  pt_rules: {<<: *pt_rules}
  private_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
